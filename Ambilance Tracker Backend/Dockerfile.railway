# Build stage
FROM maven:3.9.9-eclipse-temurin-17-alpine AS builder
WORKDIR /build

# Copy the parent pom.xml and all service files
COPY ./Ambilance\ Tracker\ Backend/pom.xml .
COPY ./Ambilance\ Tracker\ Backend/eureka-server/ eureka-server/
COPY ./Ambilance\ Tracker\ Backend/api-gateway/ api-gateway/
COPY ./Ambilance\ Tracker\ Backend/Ambulance_Service/ Ambulance_Service/
COPY ./Ambilance\ Tracker\ Backend/dispatch-coordination-service/ dispatch-coordination-service/
COPY ./Ambilance\ Tracker\ Backend/hospital-management-service/ hospital-management-service/
COPY ./Ambilance\ Tracker\ Backend/route-optimization-service/ route-optimization-service/

# Build all services
RUN mvn clean package -DskipTests

# Runtime stage
FROM eclipse-temurin:17-jre-alpine

# Install necessary tools including MySQL
RUN apk add --no-cache curl supervisor mysql mysql-client

# Create a non-root user
RUN addgroup -S spring && adduser -S spring -G spring
USER spring:spring

# Setup MySQL
RUN mkdir -p /run/mysqld && \
    chown -R mysql:mysql /run/mysqld && \
    mysql_install_db --user=mysql --datadir=/var/lib/mysql

# Create directories for each service
WORKDIR /app
RUN mkdir -p \
    /app/eureka-server \
    /app/api-gateway \
    /app/ambulance-service \
    /app/dispatch-service \
    /app/hospital-service \
    /app/route-service

# Copy the built JARs from builder stage
COPY --from=builder --chown=spring:spring /build/eureka-server/target/eureka-server-0.0.1-SNAPSHOT.jar /app/eureka-server/app.jar
COPY --from=builder --chown=spring:spring /build/api-gateway/target/api-gateway.jar /app/api-gateway/app.jar
COPY --from=builder --chown=spring:spring /build/Ambulance_Service/target/Ambulance_Service-0.0.1-SNAPSHOT.jar /app/ambulance-service/app.jar
COPY --from=builder --chown=spring:spring /build/dispatch-coordination-service/target/dispatch-coordination-service-0.0.1-SNAPSHOT.jar /app/dispatch-service/app.jar
COPY --from=builder --chown=spring:spring /build/hospital-management-service/target/hospital-management-service-0.0.1-SNAPSHOT.jar /app/hospital-service/app.jar
COPY --from=builder --chown=spring:spring /build/route-optimization-service/target/route-optimization-service-0.0.1-SNAPSHOT.jar /app/route-service/app.jar

# Create MySQL init script
COPY ./Ambilance\ Tracker\ Backend/init.sql /docker-entrypoint-initdb.d/

# Create supervisor configuration
RUN mkdir -p /etc/supervisor.d/
COPY ./Ambilance\ Tracker\ Backend/supervisord.conf /etc/supervisord.conf

# Switch back to root to setup supervisor
USER root

# Expose all necessary ports
EXPOSE 3306 8761 8084 8095 8096 8093

# Set Java options
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

# Set MySQL environment variables
ENV MYSQL_DATABASE=ambulance_db \
    MYSQL_USER=root \
    MYSQL_PASSWORD=root \
    MYSQL_ROOT_PASSWORD=root

# Start supervisor
CMD ["supervisord", "-c", "/etc/supervisord.conf"]
